/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medfile;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ashwinrameshkumar
 */
public class viewRecords extends javax.swing.JFrame {
        DefaultTableModel model = null;
        
       static Connection conn ;
        PreparedStatement stmt = null;
        String id_pass = null;
                    String patientID_pass = null;
                    String recordDate_pass = null;
                   String  doctorID_pass = null;
                    String location_pass = null;
                    String height_pass = null;
                    String weight_pass = null;
                    String bloodPressure_pass = null;
                    String cholestrol_pass = null;
                    String reasonforVisit_pass = null;
                   String doctorDiagnosis_pass = null;
                    String doctorNote_pass = null;
                    String labNote_pass = null;
    /**
     * Creates new form viewRecords
     */
    public viewRecords() {
        initComponents();
        conn = Connect.getConnect();
        model = (DefaultTableModel) ResultTab.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        patientID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        doctorID = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResultTab = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jLabel1.setText("View/Edit Records");

        jLabel2.setText("Patient ID");

        jLabel3.setText("Doctor ID");

        jButton1.setText("Retrieve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ResultTab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "patientID", "recordDate", "doctorID", "location", "height", "weight", "bloodPressure", "cholesterol", "reasonforVisit", "doctorDiagnosis", "doctorNote", "labNote"
            }
        ));
        ResultTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResultTabMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ResultTab);

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(341, 341, 341))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addGap(35, 35, 35)
                .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(146, 146, 146)
                .addComponent(jLabel3)
                .addGap(30, 30, 30)
                .addComponent(doctorID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(patientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(doctorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            try {
                // TODO add your handling code here:
                model.setRowCount(0);
                // TODO add your handling code here:
                
                
                String SQL= "SELECT a.ID,a.patientID,a.recordDate,a.doctorID,a.location,a.height,a.weight,a.bloodPressure,a.cholesterol,a.reasonforVisit,a.doctorDiagnosis,a.doctorNote,a.labNote from MedFiles.record a where a.patientID  like '%"+patientID.getText()+"%' AND a.doctorID like '%"+doctorID.getText()+"%' ;";
                stmt = conn.prepareStatement(SQL);
                System.out.println("SQL is "+stmt);
                
                ResultSet rs = null;
                //  System.out.println(stmt);
                String ID=null;
                String patientID=null;
                String recordDate = null;
                String doctorID=null;
                String location=null;
                String height=null;
                String weight=null;
                String bloodPressure=null;
                String cholestrol=null;
                String reasonforVisit=null;
                String doctorDiagnosis=null;
                String doctorNote=null;
                String labNote=null;
                
                int z=0;
                rs = stmt.executeQuery();
                //System.out.println(rs);
                
                while (rs.next()) {
                    ID = rs.getString("ID");
                    patientID = rs.getString("patientID");
                    recordDate = rs.getString("recordDate");
                    doctorID = rs.getString("doctorID");
                    location = rs.getString("location");
                    height = rs.getString("height");
                    weight = rs.getString("weight");
                    bloodPressure = rs.getString("bloodPressure");
                    cholestrol = rs.getString("cholesterol");
                    reasonforVisit = rs.getString("reasonforVisit");
                    doctorDiagnosis = rs.getString("doctorDiagnosis");
                    doctorNote = rs.getString("doctorNote");
                    labNote = rs.getString("labNote");
                    
                    model.addRow(new Object[]{
                        ID ,
                        patientID ,
                        recordDate ,
                        doctorID,
                        location ,
                        height,
                        weight ,
                        bloodPressure ,
                        cholestrol,
                        reasonforVisit ,
                        doctorDiagnosis ,
                        doctorNote ,
                        labNote
                            
                    });
                    
                    
//             Resulttab.setValueAt(Book_id, z, 0);
//             Resulttab.setValueAt(Title, z, 1);
//             Resulttab.setValueAt(Author_name, z, 2);
//             Resulttab.setValueAt(Branch_id, z, 3);
//             Resulttab.setValueAt(Total, z, 4);
//             Resulttab.setValueAt(Avail, z, 5);
//             z++;
                    z++;
                }   } catch (SQLException ex) {
                Logger.getLogger(viewRecords.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ResultTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResultTabMouseClicked
            try {
                // TODO add your handling code here:
                ResultSet rs = null;
                int row = ResultTab.getSelectedRow();
                String tableclick = (ResultTab.getModel().getValueAt(row,0).toString());
                String SQL = "Select * from MedFiles.record where ID = '"+tableclick+"';";
                stmt = conn.prepareStatement(SQL);
                rs = stmt.executeQuery();
                if(rs.next())
                {
                     id_pass = rs.getString("ID");
                     patientID_pass = rs.getString("patientID");
                     recordDate_pass = rs.getString("recordDate");
                     doctorID_pass = rs.getString("doctorID");
                     location_pass = rs.getString("location");
                     height_pass = rs.getString("height");
                     weight_pass = rs.getString("weight");
                     bloodPressure_pass = rs.getString("bloodPressure");
                     cholestrol_pass = rs.getString("cholesterol");
                     reasonforVisit_pass = rs.getString("reasonforVisit");
                    doctorDiagnosis_pass = rs.getString("doctorDiagnosis");
                     doctorNote_pass = rs.getString("doctorNote");
                     labNote_pass = rs.getString("labNote");
                    System.out.println(id_pass);
                }
            } catch (SQLException ex) {
                Logger.getLogger(viewRecords.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }//GEN-LAST:event_ResultTabMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        UpdateRecords update = new UpdateRecords();
        
        update.setVisible(true);
        dispose();
        update.id.setText(id_pass);
        update.patientid.setText(patientID_pass);
//        update.date.setDate(recordDate_pass.toString());
        update.doctorid.setText(doctorID_pass);
        update.location.setText(location_pass);
        update.height.setText(height_pass);
        update.weight.setText(weight_pass);
        update.bp.setText(bloodPressure_pass);
        update.cholesterol.setText(cholestrol_pass);
        update.visit.setText(reasonforVisit_pass);
        update.note.setText(doctorNote_pass);
        update.labnote.setText(labNote_pass);
        update.diag.setText(doctorDiagnosis_pass);
 

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewRecords().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ResultTab;
    private javax.swing.JTextField doctorID;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField patientID;
    // End of variables declaration//GEN-END:variables
}
